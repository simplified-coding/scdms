{
  "openapi": "3.0.3",
  "info": {
    "title": "SCDMS - Simplified Coding Data Managment Service",
    "description": "This is the Simplified Coding Data Managment Service API.",
    "contact": {
      "email": "main@simplifiecoding.org"
    },
    "license": {
      "name": "GPL v3.0",
      "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
    },
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "https://scdms-server.simplifiedcoding.org"
    }
  ],
  "tags": [
    {
      "name": "certs",
      "description": "Everything related to certidicates"
    },
    {
      "name": "oauth",
      "description": "OAuth related routes"
    }
  ],
  "paths": {
    "/oauth/token/:token": {
      "post": {
        "operationId": "post_oauth_token_token",
        "summary": "Request a JWT with a token",
        "description": "Requests a JWT from the returned token after succesful OAuth",
        "tags": ["oauth"],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "The OAuth token",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "404": {
            "description": "Token not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "msg"],
                  "properties": {
                    "status": { "type": "boolean", "default": "false" },
                    "msg": { "type": "string", "default": "Token not found!" }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "jwt"],
                  "properties": {
                    "status": { "type": "boolean", "default": "true" },
                    "jwt": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/oauth/discord/request": {
      "get": {
        "operationId": "get_oauth_discord_request",
        "summary": "Get a discord OAuth redirect",
        "description": "Redirects to discord OAuth authorize URL.",
        "parameters": [
          {
            "in": "query",
            "name": "provider",
            "description": "The oauth provider to redirect to after authentication",
            "schema": { "type": "string" }
          }
        ],
        "tags": ["oauth"]
      }
    },
    "/oauth/discord/finalize": {
      "get": {
        "operationId": "get_oauth_discord_finalize",
        "summary": "Finalize a discord OAuth request & get access token",
        "description": "Redirects to discord OAuth authorize URL.",
        "tags": ["oauth"],
        "responses": {
          "200": {
            "description": "Account authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": true
                    },
                    "state": {
                      "type": "string"
                    },
                    "jwt": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found / Incorrent Params",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": true
                    },
                    "msg": {
                      "type": "string",
                      "example": "The state was invalid or the IP address doesn't match with the original one"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/certs": {
      "get": {
        "operationId": "get_certs",
        "summary": "Route check",
        "description": "Checks if the /certs/ routes work",
        "tags": ["certs"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "SCDMS - Certificates API"
                    },
                    "status": {
                      "type": "boolean",
                      "default": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/certs/generate": {
      "post": {
        "operationId": "post_certs_generate",
        "summary": "Generates a certificate",
        "description": "Generates a certificate and sends it for verification",
        "tags": ["certs"],
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullname": {
                    "type": "string",
                    "example": "Jeff Jefferson"
                  },
                  "email": {
                    "type": "string",
                    "example": "jeff@simplifiedcoding.org"
                  },
                  "course": {
                    "type": "string",
                    "example": "python"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": true
                    },
                    "id": {
                      "type": "string"
                    },
                    "cert": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Certificate Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": false
                    },
                    "conflict": {
                      "type": "string",
                      "example": "certificate"
                    },
                    "msg": {
                      "type": "string",
                      "example": "A certificate already exists"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Bad Input Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": false
                    },
                    "msg": {
                      "type": "string",
                      "example": "Some fields were not found!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/certs/generate/notify": {
      "post": {
        "operationId": "post_certs_generate_notify",
        "summary": "Notifies of a certificate generation",
        "description": "Notifies the receipient of a certificate generation",
        "tags": ["certs"],
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullname": {
                    "type": "string",
                    "example": "Jeff Jefferson"
                  },
                  "email": {
                    "type": "string",
                    "example": "jeff@simplifiedcoding.org"
                  },
                  "course": {
                    "type": "string",
                    "example": "python"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": true
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Bad Input Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": false
                    },
                    "msg": {
                      "type": "string",
                      "example": "Some fields were not found!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/certs/user/:fullname": {
      "get": {
        "operationId": "get_certs_user_fullname",
        "summary": "Get's all certificates of a user",
        "description": "Looks up all certificates of a user with the fullname :fullname",
        "tags": ["certs"],
        "security": [
          {
            "jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lookup Results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "fullname",
                      "course",
                      "status",
                      "deactivationReason"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "fullname": {
                        "type": "string"
                      },
                      "course": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "deactivationReason": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/certs/:id": {
      "get": {
        "operationId": "get_certs_id",
        "summary": "Gets a certificate status",
        "description": "Looks up the certificate and returns it status",
        "tags": ["certs"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": true
                    },
                    "certID": {
                      "type": "string"
                    },
                    "certStatus": {
                      "type": "string"
                    },
                    "certFullname": {
                      "type": "string"
                    },
                    "certCourse": {
                      "type": "string"
                    },
                    "certDeactivationReason": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_certs_id",
        "summary": "Revokes a certificate",
        "description": "Looks up the certificate and revokes it",
        "tags": ["certs"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "deactivationReason"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "deactivationReason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": true
                    },
                    "emailID": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": false
                    },
                    "msg": {
                      "type": "string",
                      "example": "Certificate with ID: <ID> not found!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "post_certs_id",
        "summary": "Reinstate a certificate",
        "description": "Looks up the certificate and reinstate it",
        "security": [
          {
            "jwt": []
          }
        ],
        "tags": ["certs"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": true
                    },
                    "emailID": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "default": false
                    },
                    "msg": {
                      "type": "string",
                      "example": "Certificate with ID: <ID> not found!"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/course/:slug": {
      "get": {
        "operationId": "get_course_slug",
        "summary": "Get's a courses ID from its slug",
        "description": "Returns the pocketbase course ID that has the course slug",
        "tags": ["course", "pocketbase"],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "id"],
                  "properties": {
                    "status": { "type": "boolean", "default": "true" },
                    "id": {
                      "type": "string",
                      "description": "The pocketbase ID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/course/migrate": {
      "post": {
        "operationId": "get_course_migrate",
        "summary": "Migrate a courses.json file to pocketbase",
        "description": "Checks all courses in the provided course.json file as the request body, if the course is not found then it is inserted.",
        "tags": ["course", "pocketbase", "migrate"],
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The courses.json file contents",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["courses"],
                "properties": {
                  "courses": {
                    "type": "array"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status"],
                  "properties": {
                    "status": { "type": "boolean", "default": "true" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request Body Data Missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "msg"],
                  "properties": {
                    "status": { "type": "boolean", "default": "false" },
                    "msg": {
                      "type": "string",
                      "default": "The courses array in the body to migrate was not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lessons/migrate": {
      "post": {
        "operationId": "get_lessons_migrate",
        "summary": "Migrate a $course.json file containing lessons to pocketbase",
        "description": "Checks all courses in the provided course.json file as the request body, if the course is not found then it is inserted.",
        "tags": ["lesson", "pocketbase", "migrate"],
        "security": [
          {
            "jwt": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The $course.json file contents",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["data"],
                "properties": {
                  "data": {
                    "type": "array"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "course",
            "description": "The course slug that the JSON file belongs to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status"],
                  "properties": {
                    "status": { "type": "boolean", "default": "true" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request Body Data Missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "msg"],
                  "properties": {
                    "status": { "type": "boolean", "default": "false" },
                    "msg": {
                      "type": "string",
                      "default": "The courses array in the body to migrate was not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lessons/:slug": {
      "get": {
        "operationId": "get_lessons_slug",
        "summary": "Get's all of the lessons of a specific course",
        "description": "Returns the pocketbase lessons that are attached to the course (via the course slug paramaeter)",
        "tags": ["lesson", "pocketbase"],
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "id"],
                  "properties": {
                    "status": { "type": "boolean", "default": "true" },
                    "id": {
                      "type": "array",
                      "description": "The lessons"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "User JWT"
      }
    }
  }
}
